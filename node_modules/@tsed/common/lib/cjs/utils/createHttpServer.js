"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHttpServer = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const core_1 = require("@tsed/core");
const http_1 = tslib_1.__importDefault(require("http"));
const httpServer_1 = require("../decorators/httpServer");
const listenServer_1 = require("./listenServer");
function createHttpServer(injector, requestListener) {
    const { settings } = injector;
    const httpPort = settings.getRaw("httpPort");
    const httpOptions = settings.getRaw("httpOptions");
    const server = httpPort !== false ? http_1.default.createServer(httpOptions, requestListener) : null;
    injector.addProvider(httpServer_1.HttpServer, {
        scope: di_1.ProviderScope.SINGLETON,
        useValue: server
    });
    injector.addProvider(http_1.default.Server, {
        scope: di_1.ProviderScope.SINGLETON,
        useValue: server
    });
    injector.invoke(httpServer_1.HttpServer);
    injector.invoke(http_1.default.Server);
    if (server) {
        const hostInfo = (0, core_1.getHostInfoFromPort)("http", httpPort);
        return async () => {
            const resolvedHostInfo = await (0, listenServer_1.listenServer)(injector, server, hostInfo);
            settings.setRaw("httpPort", `${resolvedHostInfo.address}:${resolvedHostInfo.port}`);
            return server;
        };
    }
}
exports.createHttpServer = createHttpServer;
//# sourceMappingURL=createHttpServer.js.map