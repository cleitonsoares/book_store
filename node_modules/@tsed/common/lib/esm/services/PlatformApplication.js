import { __decorate, __metadata } from "tslib";
import { Injectable, ProviderScope } from "@tsed/di";
import { PlatformHandler } from "./PlatformHandler.js";
import { PlatformRouter } from "./PlatformRouter.js";
import { PlatformAdapter } from "./PlatformAdapter.js";
/**
 * `PlatformApplication` is used to provide all routes collected by annotation `@Controller`.
 *
 * @platform
 */
let PlatformApplication = class PlatformApplication extends PlatformRouter {
    constructor(platformHandler, adapter) {
        super(platformHandler, adapter);
        const { app, callback } = adapter.app();
        this.rawApp = this.raw = app;
        this.callback = callback;
    }
    getApp() {
        return this.raw;
    }
};
PlatformApplication = __decorate([
    Injectable({
        scope: ProviderScope.SINGLETON
    }),
    __metadata("design:paramtypes", [PlatformHandler, PlatformAdapter])
], PlatformApplication);
export { PlatformApplication };
//# sourceMappingURL=PlatformApplication.js.map