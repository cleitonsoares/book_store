import { AnyPromiseResult, AnyToPromise } from "@tsed/core";
import { PlatformContext } from "./PlatformContext";
/**
 * @ignore
 */
export interface HandlerContextOptions {
    $ctx: PlatformContext;
    err?: any;
}
export declare class AnyToPromiseWithCtx extends AnyToPromise {
    $ctx: PlatformContext;
    err: unknown;
    constructor({ $ctx, err }: HandlerContextOptions);
    isDone(): boolean;
    call(cb: Function): Promise<AnyPromiseResult<any>>;
    destroy(): void;
    isCanceledResponse(process: any): boolean;
}
