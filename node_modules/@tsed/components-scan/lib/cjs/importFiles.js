"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.importFiles = void 0;
const core_1 = require("@tsed/core");
const cleanGlobPatterns_1 = require("./cleanGlobPatterns");
async function importFiles(patterns, exclude) {
    const { default: globby } = await Promise.resolve().then(() => __importStar(require("globby")));
    const files = await globby((0, cleanGlobPatterns_1.cleanGlobPatterns)(patterns, exclude));
    const symbols = [];
    for (const file of files.sort((a, b) => (a < b ? -1 : 1))) {
        if (!file.endsWith(".d.ts")) {
            // prevent .d.ts import if the global pattern isn't correctly configured
            try {
                const exports = await (0, core_1.importPackage)(file);
                Object.keys(exports).forEach((key) => symbols.push(exports[key]));
            }
            catch (er) {
                // istanbul ignore next
                console.error(er);
                // istanbul ignore next
                process.exit(1);
            }
        }
    }
    return symbols;
}
exports.importFiles = importFiles;
//# sourceMappingURL=importFiles.js.map