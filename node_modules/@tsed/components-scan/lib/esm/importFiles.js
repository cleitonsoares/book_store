import { importPackage } from "@tsed/core";
import { cleanGlobPatterns } from "./cleanGlobPatterns.js";
export async function importFiles(patterns, exclude) {
    const { default: globby } = await import("globby");
    const files = await globby(cleanGlobPatterns(patterns, exclude));
    const symbols = [];
    for (const file of files.sort((a, b) => (a < b ? -1 : 1))) {
        if (!file.endsWith(".d.ts")) {
            // prevent .d.ts import if the global pattern isn't correctly configured
            try {
                const exports = await importPackage(file);
                Object.keys(exports).forEach((key) => symbols.push(exports[key]));
            }
            catch (er) {
                // istanbul ignore next
                console.error(er);
                // istanbul ignore next
                process.exit(1);
            }
        }
    }
    return symbols;
}
//# sourceMappingURL=importFiles.js.map