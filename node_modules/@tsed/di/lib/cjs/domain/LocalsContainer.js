"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalsContainer = void 0;
class LocalsContainer extends Map {
    /**
     * Emit an event to all service. See service [lifecycle hooks](/docs/services.md#lifecycle-hooks).
     * @param eventName The event name to emit at all services.
     * @param args List of the parameters to give to each services.
     * @returns {Promise<any[]>} A list of promises.
     */
    async emit(eventName, ...args) {
        for (const handler of this.getListeners(eventName)) {
            await handler(...args);
        }
    }
    /**
     * @param eventName
     * @param value
     * @param args
     */
    alter(eventName, value, ...args) {
        for (const handler of this.getListeners(eventName)) {
            value = handler(value, ...args);
        }
        return value;
    }
    /**
     * @param eventName
     * @param value
     * @param args
     */
    async alterAsync(eventName, value, ...args) {
        for (const handler of this.getListeners(eventName)) {
            value = handler(value, ...args);
        }
        return value;
    }
    toArray() {
        return [...this.values()];
    }
    async destroy() {
        await this.emit("$onDestroy");
        this.clear();
    }
    getListeners(event) {
        return this.toArray().reduce((listeners, instance) => {
            if (typeof instance === "object" && instance && event in instance) {
                return listeners.concat(instance[event].bind(instance));
            }
            return listeners;
        }, []);
    }
}
exports.LocalsContainer = LocalsContainer;
//# sourceMappingURL=LocalsContainer.js.map