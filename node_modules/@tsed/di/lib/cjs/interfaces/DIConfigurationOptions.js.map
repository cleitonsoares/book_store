{"version":3,"file":"DIConfigurationOptions.js","sourceRoot":"","sources":["../../../src/interfaces/DIConfigurationOptions.ts"],"names":[],"mappings":"","sourcesContent":["import type {DIResolver} from \"./DIResolver\";\nimport type {ProviderScope} from \"../domain/ProviderScope\";\nimport type {TokenProvider} from \"./TokenProvider\";\n\ndeclare global {\n  namespace TsED {\n    interface Context {}\n    interface Configuration {\n      scopes: {[key: string]: ProviderScope};\n      /**\n       * Define a list of resolvers (it can be an external DI).\n       */\n      resolvers: DIResolver[];\n      /**\n       * Define dependencies to build the provider\n       */\n      imports: TokenProvider[];\n      /**\n       * Mount controllers\n       */\n      mount: Record<string, TokenProvider[]>;\n\n      [key: string]: any;\n    }\n  }\n}\n\nexport interface DIConfigurationOptions extends TsED.Configuration {}\n"]}