import type { TokenProvider } from "../interfaces/TokenProvider";
export declare class LocalsContainer<V = any> extends Map<TokenProvider, V> {
    /**
     * Emit an event to all service. See service [lifecycle hooks](/docs/services.md#lifecycle-hooks).
     * @param eventName The event name to emit at all services.
     * @param args List of the parameters to give to each services.
     * @returns {Promise<any[]>} A list of promises.
     */
    emit(eventName: string, ...args: any[]): Promise<void>;
    /**
     * @param eventName
     * @param value
     * @param args
     */
    alter<T = any>(eventName: string, value: any, ...args: any[]): T;
    /**
     * @param eventName
     * @param value
     * @param args
     */
    alterAsync<T = any>(eventName: string, value: any, ...args: any[]): Promise<T>;
    toArray(): V[];
    destroy(): Promise<void>;
    protected getListeners(event: string): any[];
}
