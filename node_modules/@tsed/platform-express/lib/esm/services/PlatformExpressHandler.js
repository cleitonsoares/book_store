import { HandlerType, PlatformHandler } from "@tsed/common";
/**
 * @platform
 * @express
 */
export class PlatformExpressHandler extends PlatformHandler {
    createRawHandler(metadata) {
        if (metadata.type === HandlerType.ERR_MIDDLEWARE) {
            const handler = this.compileHandler(metadata);
            return async (err, req, res, next) => handler({
                err,
                next,
                $ctx: req.$ctx
            });
        }
        return super.createRawHandler(metadata);
    }
    async onCtxRequest(requestOptions) {
        try {
            return await super.onCtxRequest(requestOptions);
        }
        catch (er) {
            return this.onError(er, requestOptions);
        }
    }
}
//# sourceMappingURL=PlatformExpressHandler.js.map