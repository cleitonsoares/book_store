{"version":3,"file":"PlatformLogMiddleware.js","sourceRoot":"","sources":["../../../src/middlewares/PlatformLogMiddleware.ts"],"names":[],"mappings":"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","sourcesContent":["import {Constant} from \"@tsed/di\";\nimport {Middleware, MiddlewareMethods} from \"@tsed/platform-middlewares\";\nimport {Context} from \"@tsed/platform-params\";\nimport type {LoggerRequestFields} from \"../domain/PlatformLogMiddlewareSettings\";\n\n/**\n * @middleware\n * @platform\n */\n@Middleware()\nexport class PlatformLogMiddleware implements MiddlewareMethods {\n  $onResponse: any;\n\n  @Constant(\"logger.requestFields\", [\"reqId\", \"method\", \"url\", \"duration\"])\n  protected requestFields: LoggerRequestFields;\n\n  @Constant(\"logger.logRequest\", true)\n  protected logRequest: boolean;\n\n  @Constant(\"logger.logStart\", true)\n  protected logStart: boolean;\n\n  @Constant(\"logger.logEnd\", true)\n  protected logEnd: boolean;\n\n  @Constant(\"logger.level\")\n  protected logLevel: string;\n\n  @Constant(\"debug\")\n  protected debug: boolean;\n\n  constructor() {\n    if (this.logLevel !== \"off\") {\n      this.$onResponse = this.onLogEnd.bind(this);\n    }\n  }\n\n  get settings() {\n    return this;\n  }\n\n  /**\n   * Handle the request.\n   */\n  public use(@Context() ctx: Context): void {\n    this.configureRequest(ctx);\n    this.onLogStart(ctx);\n  }\n\n  /**\n   * The separate onLogStart() function will allow developer to overwrite the initial request log.\n   * @param ctx\n   */\n  protected onLogStart(ctx: Context) {\n    const {debug, logRequest, logStart} = this.settings;\n\n    if (logStart) {\n      if (debug) {\n        ctx.logger.debug({\n          event: \"request.start\"\n        });\n      } else if (logRequest) {\n        ctx.logger.info({\n          event: \"request.start\"\n        });\n      }\n    }\n  }\n\n  /**\n   * Called when the `$onResponse` is called by Ts.ED (through Express.end).\n   */\n  protected onLogEnd(ctx: Context) {\n    const {debug, logRequest, logEnd} = this.settings;\n\n    if (logEnd) {\n      if (debug) {\n        ctx.logger.debug({\n          event: \"request.end\",\n          status: ctx.response.statusCode,\n          data: ctx.data\n        });\n      } else if (logRequest) {\n        ctx.logger.info({\n          event: \"request.end\",\n          status: ctx.response.statusCode\n        });\n      }\n    }\n\n    ctx.logger.flush();\n  }\n\n  /**\n   * Attach all information that will be necessary to log the request. Attach a new `request.log` object.\n   */\n  protected configureRequest(ctx: Context) {\n    ctx.logger.minimalRequestPicker = (obj: any) => ({...this.minimalRequestPicker(ctx), ...obj});\n    ctx.logger.completeRequestPicker = (obj: any) => ({...this.requestToObject(ctx), ...obj});\n  }\n\n  /**\n   * Return complete request info.\n   * @returns {Object}\n   * @param ctx\n   */\n  protected requestToObject(ctx: Context): any {\n    const {request} = ctx;\n\n    return {\n      method: request.method,\n      url: request.url,\n      headers: request.headers,\n      body: request.body,\n      query: request.query,\n      params: request.params\n    };\n  }\n\n  /**\n   * Return a filtered request from global configuration.\n   * @returns {Object}\n   * @param ctx\n   */\n  protected minimalRequestPicker(ctx: Context): any {\n    const {requestFields} = this;\n    const info = this.requestToObject(ctx);\n\n    return requestFields!.reduce((acc: any, key: string) => {\n      acc[key] = info[key];\n\n      return acc;\n    }, {});\n  }\n}\n"]}