"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJsonSchema = void 0;
const SpecTypes_1 = require("../domain/SpecTypes");
const JsonSchemaMapperContainer_1 = require("../registries/JsonSchemaMapperContainer");
const getJsonEntityStore_1 = require("./getJsonEntityStore");
require("../components/anyMapper");
require("../components/classMapper");
require("../components/genericsMapper");
require("../components/inheritedClassMapper");
require("../components/itemMapper");
require("../components/lazyRefMapper");
require("../components/mapMapper");
require("../components/objectMapper");
require("../components/ofMapper");
require("../components/propertiesMapper");
require("../components/schemaMapper");
/**
 * @ignore
 */
const CACHE_KEY = "$cache:schemes";
/**
 * @ignore
 */
function getKey(options) {
    return JSON.stringify(options);
}
/**
 * @ignore
 */
function get(entity, options) {
    const cache = entity.store.get(CACHE_KEY) || new Map();
    const key = getKey(options);
    if (!cache.has(key)) {
        const schema = (0, JsonSchemaMapperContainer_1.execMapper)("schema", entity.schema, options);
        if (Object.keys(options.schemas).length) {
            schema.definitions = options.schemas;
        }
        cache.set(key, schema);
    }
    entity.store.set(CACHE_KEY, cache);
    return cache.get(key);
}
function getJsonSchema(model, options = {}) {
    var _a;
    const entity = (0, getJsonEntityStore_1.getJsonEntityStore)(model);
    options = {
        endpoint: true,
        groups: [],
        ...options,
        specType: options.specType || SpecTypes_1.SpecTypes.JSON,
        schemas: {}
    };
    if (entity.decoratorType === "parameter") {
        options = {
            ...options,
            genericTypes: entity.nestedGenerics[0],
            nestedGenerics: entity.nestedGenerics,
            groups: (_a = entity.parameter) === null || _a === void 0 ? void 0 : _a.groups
        };
    }
    return get(entity, options);
}
exports.getJsonSchema = getJsonSchema;
//# sourceMappingURL=getJsonSchema.js.map