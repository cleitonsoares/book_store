import { Type } from "@tsed/core";
import { JsonMethodStore } from "./JsonMethodStore";
import { JsonMethodPath, JsonOperation } from "./JsonOperation";
export declare class JsonOperationRoute<Entity extends JsonMethodStore = JsonMethodStore> {
    readonly token: Type<any>;
    readonly endpoint: Entity;
    readonly operationPath?: JsonMethodPath;
    readonly basePath?: string;
    readonly paramsTypes: Record<string, boolean>;
    constructor(options: Partial<JsonOperationRoute>);
    get url(): string;
    get path(): string | RegExp | undefined;
    get fullPath(): string;
    get method(): string;
    get isFinal(): boolean;
    get name(): string;
    get className(): string;
    get methodClassName(): string;
    get parameters(): import("./JsonParameterStore").JsonParameterStore[];
    get propertyKey(): string;
    get propertyName(): string;
    get store(): import("@tsed/core").Store;
    get operation(): JsonOperation;
    get operationId(): any;
    has(key: string): boolean;
}
