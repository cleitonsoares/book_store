{"version":3,"file":"createConnection.js","sourceRoot":"","sources":["../../../src/utils/createConnection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,YAAY,CAAC;AACpC,OAAO,EAAgC,oBAAoB,EAAC,MAAM,SAAS,CAAC;AAE5E,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,iBAAoC;IACzE,MAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;IACjD,MAAM,IAAI,GAAG,QAAQ,CAAS,iBAAiB,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IAEpE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QAChC,iBAAiB,CAAC,MAAM,CAAC,iBAAkB,CAAC,CAAC;KAC9C;IAED,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE/C,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;QAC3B,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC;KAC5B;IAED,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import {getValue} from \"@tsed/core\";\nimport {Connection, ConnectionOptions, getConnectionManager} from \"typeorm\";\n\nexport async function createConnection(connectionOptions: ConnectionOptions): Promise<Connection> {\n  const connectionManager = getConnectionManager();\n  const name = getValue<string>(connectionOptions, \"name\", \"default\");\n\n  if (!connectionManager.has(name)) {\n    connectionManager.create(connectionOptions!);\n  }\n\n  const connection = connectionManager.get(name);\n\n  if (!connection.isConnected) {\n    await connection.connect();\n  }\n\n  return connection;\n}\n"]}